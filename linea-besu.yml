x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  init:
    image: busybox
    user: root
    entrypoint:
      - sh
      - -c
    command:
      - |-
        chown -R 1000:1000 /opt/besu/data
        echo "${EL_STATIC_NODES}" > /var/lib/besu/static-nodes.json
        if [ ! -f /var/lib/besu/ee-secret/jwtsecret ]; then
          echo "Generating JWT secret"
          __secret1=$(head -c 8 /dev/urandom | od -A n -t u8 | tr -d '[:space:]' | sha256sum | head -c 32)
          __secret2=$(head -c 8 /dev/urandom | od -A n -t u8 | tr -d '[:space:]' | sha256sum | head -c 32)
          echo -n "$__secret1""$__secret2" > /var/lib/besu/ee-secret/jwtsecret
        fi
        if [ -O "/var/lib/besu/ee-secret/jwtsecret" ]; then
          chmod 666 /var/lib/besu/ee-secret/jwtsecret
        fi
        wget -O /var/lib/besu/genesis.json "${BESU_GENESIS_URL}"
        wget -O /opt/consensys/maru/configs/maru-genesis.json "${MARU_GENESIS_URL}"
    volumes:
      - linea-besu-data:/opt/besu/data
      - linea-besu-config:/var/lib/besu
      - maru-config:/opt/consensys/maru/configs
      - jwtsecret:/var/lib/besu/ee-secret
      - ./execution-layer-static-nodes.json:/var/lib/besu/static-nodes.json
    <<: *logging

  linea:
    image: consensys/linea-besu-package:${BESU_DOCKER_TAG:-latest}
    pull_policy: always
    restart: unless-stopped
    stop_grace_period: 30s
    depends_on:
      init:
        condition: service_completed_successfully
    environment:
      - JAVA_OPTS=-Xmx2g
      - LOG4J_CONFIGURATION_FILE=/var/lib/besu/log4j.xml
    command:
      - --config-file=/var/lib/besu/linea-besu.config.toml
      - --Xdns-enabled=true
      - --Xdns-update-enabled=true
      - --Xrpc-ipc-enabled=true
      - --static-nodes-file=/var/lib/besu/static-nodes.json
      - --engine-jwt-secret=/var/lib/besu/ee-secret/jwtsecret
      - --p2p-port=${EL_P2P_PORT}
      - --p2p-host=${PUBLIC_IP}
    volumes:
      - ./besu/linea-besu.config.toml:/var/lib/besu/linea-besu.config.toml:ro
      - ./besu/log4j.xml:/var/lib/besu/log4j.xml
      - ./execution-layer-static-nodes.json:/var/lib/besu/static-nodes.json:ro
      - jwtsecret:/var/lib/besu/ee-secret:ro
      - linea-besu-data:/opt/besu/data
      - linea-besu-config:/var/lib/besu
    ports:
      - ${EL_P2P_PORT}:${EL_P2P_PORT}/tcp
      - ${EL_P2P_PORT}:${EL_P2P_PORT}/udp
    networks:
      default:
        aliases:
          - el-client
    labels:
      - metrics.scrape=true
      - metrics.port=6060
      - metrics.path=/debug/metrics/prometheus
      - metrics.network=linea-${NETWORK}
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-linea}.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}.rule=Host(`${RPC_HOST:-linea}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-linea}lb.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}lb.rule=Host(`${RPC_LB:-linea-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-linea}.loadbalancer.server.port=8545
      - traefik.http.routers.${WS_HOST:-lineaws}.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}.rule=Host(`${WS_HOST:-lineaws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-lineaws}lb.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}lb.rule=Host(`${WS_LB:-lineaws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-lineaws}.loadbalancer.server.port=8546
    <<: *logging

volumes:
  linea-besu-data:
  linea-besu-config:
  jwtsecret:
  maru-config:
