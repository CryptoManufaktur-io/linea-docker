x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  init:
    image: busybox
    user: root
    entrypoint:
      - sh
      - -c
      - "chown -R 1000:1000 /opt/besu/data"
    volumes:
      - linea_besu_data:/opt/besu/data
    <<: *logging

  linea:
    image: consensys/linea-besu-package:${BESU_DOCKER_TAG:-latest}
    pull_policy: always
    restart: unless-stopped
    stop_grace_period: 30s
    depends_on:
      init:
        condition: service_completed_successfully
    environment:
      - JAVA_OPTS=-Xmx2g
      - LOG4J_CONFIGURATION_FILE=/var/lib/besu/log4j.xml
    command:
      - --config-file=/var/lib/besu/linea-besu.config.toml
      - --Xdns-enabled=true
      - --Xdns-update-enabled=true
      - --Xrpc-ipc-enabled=true
      - --static-nodes-file=/var/lib/besu/static-nodes.json
    volumes:
      - ./besu/linea-besu.config.toml:/var/lib/besu/linea-besu.config.toml:ro
      - ./besu/besu-genesis.json:/var/lib/besu/genesis.json:ro
      - ./besu/log4j.xml:/var/lib/besu/log4j.xml
      - ./execution-layer-static-nodes.json:/var/lib/besu/static-nodes.json:ro
      - ./engine-jwt:/var/lib/besu/jwt:ro
      - linea_besu_data:/opt/besu/data
    ports:
      - ${EL_P2P_PORT}:30303/tcp
      - ${EL_P2P_PORT}:30303/udp
    networks:
      default:
        aliases:
          - el-client
    labels:
      - metrics.scrape=true
      - metrics.port=6060
      - metrics.path=/debug/metrics/prometheus
      - metrics.network=linea-${NETWORK}
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-linea}.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}.rule=Host(`${RPC_HOST:-linea}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-linea}lb.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}lb.rule=Host(`${RPC_LB:-linea-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-linea}.loadbalancer.server.port=8545
      - traefik.http.routers.${WS_HOST:-lineaws}.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}.rule=Host(`${WS_HOST:-lineaws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-lineaws}lb.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}lb.rule=Host(`${WS_LB:-lineaws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-lineaws}.loadbalancer.server.port=8546
    <<: *logging

volumes:
  linea_besu_data:
