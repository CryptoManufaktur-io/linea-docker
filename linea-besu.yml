x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  init:
    image: busybox
    user: root
    entrypoint:
      - sh
      - -c
      - "chown -R 1000:1000 /opt/besu/data"
    volumes:
      - linea_besu_data:/opt/besu/data
    <<: *logging

  linea:
    image: consensys/linea-besu-package:${BESU_DOCKER_TAG:-latest}
    pull_policy: always
    restart: unless-stopped
    stop_grace_period: 30s
    depends_on:
      init:
        condition: service_completed_successfully
    entrypoint:
      - /opt/besu/bin/besu 
      - --data-path=/opt/besu/data/
      - --profile=advanced-mainnet
      - --p2p-host=${PUBLIC_IP}
      - --plugin-linea-l1-rpc-endpoint=${L1_RPC}
      - --p2p-port=${EL_P2P_PORT}
      - --rpc-http-enabled=true
      - --rpc-http-api=ETH,NET,WEB3,TXPOOL,PLUGINS
      - --rpc-http-cors-origins="*"
      - --rpc-http-host=0.0.0.0
      - --rpc-http-port=${RPC_PORT}
      - --rpc-ws-enabled=true
      - --rpc-ws-api=ETH,NET,WEB3,TXPOOL,PLUGINS
      - --rpc-ws-port=${WS_PORT}
      - --rpc-ws-host=0.0.0.0
      - --metrics-enabled=true
      - --metrics-port=6060
      - --metrics-host=0.0.0.0
      - --logging=${LOG_LEVEL}
      - --rpc-tx-feecap=0
    command: ${EXTRAS:-}
    ports:
      - ${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/tcp
      - ${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/udp
    volumes:
      - linea_besu_data:/opt/besu/data/
    labels:
      - metrics.scrape=true
      - metrics.port=6060
      - metrics.path=/debug/metrics/prometheus
      - metrics.network=linea-mainnet
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-linea}.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}.rule=Host(`${RPC_HOST:-linea}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-linea}lb.service=${RPC_HOST:-linea}
      - traefik.http.routers.${RPC_HOST:-linea}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-linea}lb.rule=Host(`${RPC_LB:-linea-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-linea}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-linea}.loadbalancer.server.port=${RPC_PORT:-8545}
      - traefik.http.routers.${WS_HOST:-lineaws}.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}.rule=Host(`${WS_HOST:-lineaws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-lineaws}lb.service=${WS_HOST:-lineaws}
      - traefik.http.routers.${WS_HOST:-lineaws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-lineaws}lb.rule=Host(`${WS_LB:-lineaws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-lineaws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-lineaws}.loadbalancer.server.port=${WS_PORT:-8546}
    <<: *logging

volumes:
  linea_besu_data:
