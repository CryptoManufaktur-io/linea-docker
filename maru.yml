x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  maru-config-init:
    image: ghcr.io/tomwright/dasel:2
    user: root
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |-
        cp /tmp/maru-config.toml /opt/consensys/maru/configs/.
        dasel put -v "${MARU_P2P_PORT}" -f /opt/consensys/maru/configs/maru-config.toml 'p2p.port'
        if [ -n "${MARU_PEERS}" ]; then
          dasel put -v "${MARU_PEERS}" -f /opt/consensys/maru/configs/maru-config.toml 'p2p.static-peers'
        fi
        dasel put -v "/opt/consensys/maru/configs/ee-secret/jwtsecret" -f /opt/consensys/maru/configs/maru-config.toml \
          'payload-validator.engine-api-endpoint.jwt-secret-path'
        dasel put -v "0xd19d4B5d358258f05D7B411E21A1460D11B0876F" -f /opt/consensys/maru/configs/maru-config.toml \
          'linea.contract-address'
        dasel put -v "${L1_RPC}" -f /opt/consensys/maru/configs/maru-config.toml 'linea.l1-eth-api.endpoint'
        dasel put -v "6 seconds" -f /opt/consensys/maru/configs/maru-config.toml 'linea.l1-polling-interval'
        dasel put -v "finalized" -f /opt/consensys/maru/configs/maru-config.toml 'linea.l1-highest-block-tag'
    volumes:
      - maru-config:/opt/consensys/maru/configs
      - ./maru/maru-config.toml:/tmp/maru-config.toml:ro
    <<: *logging

  maru:
    hostname: linea-maru
    image: consensys/maru:${MARU_DOCKER_TAG}
    restart: unless-stopped
    ports:
      - "${MARU_P2P_PORT}:${MARU_P2P_PORT}/tcp"  # P2P main port
      - "${MARU_P2P_PORT}:${MARU_P2P_PORT}/udp"  # P2P discovery port (UDP only)
    environment:
      - JAVA_OPTS=-Xmx2g
    volumes:
      - ./maru/log4j.xml:/opt/consensys/maru/configs/log4j.xml:ro
      - jwtsecret:/opt/consensys/maru/configs/ee-secret:ro
      - linea-mainnet-maru:/opt/maru
      - maru-config:/opt/consensys/maru/configs
    depends_on:
      init:
        condition: service_completed_successfully
      maru-config-init:
        condition: service_completed_successfully
    command:
      - "java"
      - "-Dlog4j2.configurationFile=/opt/consensys/maru/configs/log4j.xml"
      - "-jar"
      - "/opt/consensys/maru/maru.jar"
      - "--maru-genesis-file"
      - "/opt/consensys/maru/configs/maru-genesis.json"
      - "--config"
      - "/opt/consensys/maru/configs/maru-config.toml"
    labels:
      - metrics.scrape=true
      - metrics.port=9090
      - metrics.path=/prometheus
      - metrics.network=linea-${NETWORK}
      - traefik.enable=true
      - traefik.http.routers.${MARU_HOST:-maru}.service=${MARU_HOST:-maru}
      - traefik.http.routers.${MARU_HOST:-maru}.entrypoints=websecure
      - traefik.http.routers.${MARU_HOST:-maru}.rule=Host(`${MARU_HOST:-maru}.${DOMAIN}`)
      - traefik.http.routers.${MARU_HOST:-maru}.tls.certresolver=letsencrypt
      - traefik.http.routers.${MARU_HOST:-maru}lb.service=${MARU_HOST:-maru}
      - traefik.http.routers.${MARU_HOST:-maru}lb.entrypoints=websecure
      - traefik.http.routers.${MARU_HOST:-maru}lb.rule=Host(`${MARU_LB:-maru-lb}.${DOMAIN}`)
      - traefik.http.routers.${MARU_HOST:-maru}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${MARU_HOST:-maru}.loadbalancer.server.port=8080
    <<: *logging

volumes:
  linea-mainnet-maru:
  maru-config:
  jwtsecret:
